// Code generated by goctl. DO NOT EDIT!
// Source: courseware.proto

package server

import (
	"context"

	"go-zero-courseware/courseware/rpc/courseware"
	"go-zero-courseware/courseware/rpc/internal/logic"
	"go-zero-courseware/courseware/rpc/internal/svc"
)

type CoursewareServer struct {
	svcCtx *svc.ServiceContext
	courseware.UnimplementedCoursewareServer
}

func NewCoursewareServer(svcCtx *svc.ServiceContext) *CoursewareServer {
	return &CoursewareServer{
		svcCtx: svcCtx,
	}
}

func (s *CoursewareServer) Add(ctx context.Context, in *courseware.AddRequest) (*courseware.AddResponse, error) {
	l := logic.NewAddLogic(ctx, s.svcCtx)
	return l.Add(in)
}

func (s *CoursewareServer) Update(ctx context.Context, in *courseware.UpdateRequest) (*courseware.UpdateResponse, error) {
	l := logic.NewUpdateLogic(ctx, s.svcCtx)
	return l.Update(in)
}

func (s *CoursewareServer) Get(ctx context.Context, in *courseware.GetRequest) (*courseware.GetResponse, error) {
	l := logic.NewGetLogic(ctx, s.svcCtx)
	return l.Get(in)
}

func (s *CoursewareServer) Delete(ctx context.Context, in *courseware.DeleteRequest) (*courseware.DeleteResponse, error) {
	l := logic.NewDeleteLogic(ctx, s.svcCtx)
	return l.Delete(in)
}
